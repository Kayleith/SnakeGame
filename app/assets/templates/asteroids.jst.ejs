<section id="asteroid-canvas"></section>
<canvas id="radar" width="201" height="201"></canvas>
<div id="hud">
  <p>
    Level:
      <span id="level">
        <%= level %>
      </span>
      <br />
    Asteroids left:
      <span id="asteroids">
        <%=asteroids%>
      </span>
      <br />
    Lives:
      <span id="lives">
        <%=lives %>
      </span>
      <br />
    Score:
      <span id="score">
        <%= score %>
      </span>
      <br />
    High Score:
      <span id="high_score">
        <%= high_score %>
      </span>
      <br />
  </p>
</div>

<div id="credits"><p>Created by <a href="">Brian Kang</a> using <a href="http://mrdoob.github.com/three.js/">Three.js</a><br />WASD to move, Space to shoot<br /> 1 bonus life every 5000 points</p></div>

<section id="backView" width="300" height="300">
  <a class="menu-item" href="#snake">
    <label for="">
      SNAKE
    </label>
  </a>
  <a class="menu-item" href="#asteroids">
    <label for="">
      ASTEROID
    </label>
  </a>
  <!-- <a class="menu-item" href="#spaceinvaders">
    <label for="">
      INVADER
    </label>
  </a> -->
</section>

<script id="vertexShader" type="x-shader/x-vertex">
uniform vec3 viewVector;
uniform float c;
uniform float p;
varying float intensity;
void main()
{
    vec3 vNormal = normalize( normalMatrix * normal );
	vec3 vNormel = normalize( normalMatrix * viewVector );
	intensity = pow( c - dot(vNormal, vNormel), p );

    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}
</script>

<!-- fragment shader a.k.a. pixel shader -->
<script id="fragmentShader" type="x-shader/x-vertex">
uniform vec3 glowColor;
varying float intensity;
void main()
{
	vec3 glow = glowColor * intensity;
    gl_FragColor = vec4( glow, 1.0 );
}
</script>
